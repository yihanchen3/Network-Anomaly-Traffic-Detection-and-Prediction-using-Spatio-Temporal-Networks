
# define model structure
model=Sequential()
model.add(Conv1D(64, kernel_size=5, strides=1, padding='same', activation='relu',input_shape=(60, 1),kernel_initializer='he_normal'))
model.add(MaxPooling1D(pool_size=2, strides=2))
# model.add(Dropout(0.5))
model.add(Conv1D(64, kernel_size=5, strides=1, padding='same', activation='relu',kernel_initializer='he_normal'))
model.add(MaxPooling1D(pool_size=2, strides=2))
# model.add(Dropout(0.2))
model.add(Reshape((1,15*64)))
model.add(TCN(64, activation='tanh',return_sequences='True'))
# model.add(Dropout(0.5))
model.add(Attention(units=32))
model.add(Flatten())
model.add(Dense(32, activation='relu',kernel_initializer='he_normal'))
model.add(Dropout(0.5))
model.add(Dense(2, activation='softmax'))
model.compile(loss='binary_crossentropy', optimizer='adam',metrics=['accuracy'])
model.summary()
